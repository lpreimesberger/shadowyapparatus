!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ShadowyWeb3=e():t.ShadowyWeb3=e()}(self,()=>(()=>{"use strict";var t={266:(t,e,r)=>{r.d(e,{A6:()=>o,AddressUtils:()=>a,KX:()=>l,V0:()=>n,bk:()=>c,bu:()=>i});var s=r(574);class a{static isValidAddress(t){if(!t||"string"!=typeof t)return!1;switch(t[0]){case"S":return t.length===s.QT.S_ADDRESS&&/^S[0-9a-fA-F]{50}$/.test(t);case"L":return t.length===s.QT.L_ADDRESS&&/^L[0-9a-fA-F]{40}$/.test(t);default:return!1}}static getAddressType(t){return this.isValidAddress(t)?t[0]:null}static formatAddress(t,e=8){return!t||t.length<=2*e+3?t:`${t.slice(0,e+1)}...${t.slice(-e)}`}}class o{static shadowToSatoshis(t){return Math.round(t*s.yI)}static satoshisToShadow(t){return t/s.yI}static formatShadow(t,e=8){return t.toFixed(e)}static formatShadowWithUnit(t,e=8){return`${this.formatShadow(t,e)} SHADOW`}}class n{static async getRandomBytes(t){const e=new Uint8Array(t);return crypto.getRandomValues(e),e}static async generateSeed(){return this.getRandomBytes(64)}static arrayToBase64(t){return btoa(String.fromCharCode(...t))}static base64ToArray(t){const e=atob(t),r=new Uint8Array(e.length);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);return r}static arrayToHex(t){return Array.from(t).map(t=>t.toString(16).padStart(2,"0")).join("")}static hexToArray(t){const e=new Uint8Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=parseInt(t.substr(r,2),16);return e}}class i{static storeWallet(t,e,r="localStorage"){try{const s=this.WALLET_KEY_PREFIX+t,a="localStorage"===r?window.localStorage:window.sessionStorage,o=btoa(JSON.stringify(e));return a.setItem(s,o),!0}catch(t){return console.error("Failed to store wallet:",t),!1}}static loadWallet(t,e="localStorage"){try{const r=this.WALLET_KEY_PREFIX+t,s=("localStorage"===e?window.localStorage:window.sessionStorage).getItem(r);if(!s)return null;const a=atob(s);return JSON.parse(a)}catch(t){return console.error("Failed to load wallet:",t),null}}static listWallets(t="localStorage"){try{const e="localStorage"===t?window.localStorage:window.sessionStorage;return Object.keys(e).filter(t=>t.startsWith(this.WALLET_KEY_PREFIX)).map(t=>t.replace(this.WALLET_KEY_PREFIX,""))}catch(t){return console.error("Failed to list wallets:",t),[]}}static deleteWallet(t,e="localStorage"){try{const r=this.WALLET_KEY_PREFIX+t;return("localStorage"===e?window.localStorage:window.sessionStorage).removeItem(r),!0}catch(t){return console.error("Failed to delete wallet:",t),!1}}static storeSettings(t){try{return window.localStorage.setItem(this.SETTINGS_KEY,JSON.stringify(t)),!0}catch(t){return console.error("Failed to store settings:",t),!1}}static loadSettings(){try{const t=window.localStorage.getItem(this.SETTINGS_KEY);return t?JSON.parse(t):{}}catch(t){return console.error("Failed to load settings:",t),{}}}}i.WALLET_KEY_PREFIX="shadowy_wallet_",i.SETTINGS_KEY="shadowy_settings";class l{static async request(t,e={}){const{timeout:r=1e4,...s}=e,a=new AbortController,o=setTimeout(()=>a.abort(),r);try{const e=await fetch(t,{...s,signal:a.signal,headers:{"Content-Type":"application/json",...s.headers}});return clearTimeout(o),e}catch(t){throw clearTimeout(o),t}}static async get(t,e){const r=await this.request(t,{method:"GET",headers:e});if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);return r.json()}static async post(t,e,r){const s=await this.request(t,{method:"POST",headers:r,body:e?JSON.stringify(e):void 0});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);return s.json()}}class c{constructor(){this.listeners=new Map}on(t,e){this.listeners.has(t)||this.listeners.set(t,new Set),this.listeners.get(t).add(e)}off(t,e){const r=this.listeners.get(t);r&&r.delete(e)}emit(t,...e){const r=this.listeners.get(t);r&&r.forEach(r=>{try{r(...e)}catch(e){console.error(`Error in event listener for ${String(t)}:`,e)}})}removeAllListeners(t){t?this.listeners.delete(t):this.listeners.clear()}}},574:(t,e,r)=>{r.d(e,{QT:()=>n,c_:()=>o,kQ:()=>a,yI:()=>s});const s=1e8,a=.011,o="ML-DSA-87",n={S_ADDRESS:51,L_ADDRESS:41}}},e={};function r(s){var a=e[s];if(void 0!==a)return a.exports;var o=e[s]={exports:{}};return t[s](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var s={};r.r(s),r.d(s,{ADDRESS_LENGTH:()=>l.QT,AddressUtils:()=>a.AddressUtils,AmountUtils:()=>a.A6,CRYPTO_ALGORITHM:()=>l.c_,CryptoUtils:()=>a.V0,DEFAULT_FEE_SHADOW:()=>l.kQ,EventEmitter:()=>a.bk,HttpUtils:()=>a.KX,SATOSHIS_PER_SHADOW:()=>l.yI,ShadowyNetworkProvider:()=>o,ShadowyWallet:()=>n,ShadowyWeb3:()=>c,StorageUtils:()=>a.bu,WasmBridge:()=>i,default:()=>d});var a=r(266);class o{constructor(t){this.config={timeout:1e4,...t}}async getNodeInfo(){const t=`${this.config.url}/api/v1/status`,e=this.getHeaders();try{const r=await a.KX.get(t,e);return{tipHeight:r.tip_height||0,totalBlocks:r.total_blocks||0,totalTransactions:r.total_transactions||0,status:r.status||"unknown",version:r.version}}catch(t){throw new Error(`Failed to get node info: ${t instanceof Error?t.message:"Unknown error"}`)}}async getBalance(t){if(!a.AddressUtils.isValidAddress(t))throw new Error(`Invalid address format: ${t}`);const e=`${this.config.url}/api/v1/address/${t}/balance`,r=this.getHeaders();try{const t=await a.KX.get(e,r);return{address:t.address,balance:t.balance||0,balanceSatoshis:t.balance_satoshis||0,confirmed:t.confirmed||0,confirmedSatoshis:t.confirmed_satoshis||0,unconfirmed:t.unconfirmed||0,unconfirmedSatoshis:t.unconfirmed_satoshis||0,totalReceived:t.total_received||0,totalReceivedSatoshis:t.total_received_satoshis||0,totalSent:t.total_sent||0,totalSentSatoshis:t.total_sent_satoshis||0,transactionCount:t.transaction_count||0,lastActivity:t.last_activity}}catch(t){throw new Error(`Failed to get balance: ${t instanceof Error?t.message:"Unknown error"}`)}}async getUTXOs(t){if(!a.AddressUtils.isValidAddress(t))throw new Error(`Invalid address format: ${t}`);const e=`${this.config.url}/api/v1/utxos?address=${encodeURIComponent(t)}`,r=this.getHeaders();try{const t=await a.KX.get(e,r);if(!Array.isArray(t))throw new Error("Invalid UTXO response format");return t.map(t=>({txid:t.txid,vout:t.vout,value:t.value,scriptPubkey:t.script_pubkey||t.scriptPubkey||"",address:t.address,confirmations:t.confirmations||0}))}catch(t){throw new Error(`Failed to get UTXOs: ${t instanceof Error?t.message:"Unknown error"}`)}}async broadcastTransaction(t){const e=`${this.config.url}/api/v1/mempool/transactions`,r=this.getHeaders();try{let s;try{s="string"==typeof t.transaction?JSON.parse(t.transaction):t.transaction}catch(t){throw new Error("Invalid transaction format")}const o={transaction:s,signature:t.signature,tx_hash:t.txHash,signer_key:t.signerKey,algorithm:t.algorithm,header:t.header},n=await a.KX.post(e,o,r);return{txHash:t.txHash,signature:t.signature,rawTransaction:JSON.stringify(s),status:"accepted"===n.status?"broadcast":"failed",message:n.message||"Transaction broadcast"}}catch(e){return{txHash:t.txHash,signature:t.signature,rawTransaction:t.transaction,status:"failed",message:`Broadcast failed: ${e instanceof Error?e.message:"Unknown error"}`}}}async testConnection(){try{const t=`${this.config.url}/api/v1/health`,e=this.getHeaders();return await a.KX.get(t,e),!0}catch(t){return!1}}isValidAddress(t){return a.AddressUtils.isValidAddress(t)}getHeaders(){const t={"Content-Type":"application/json"};return this.config.apiKey&&(t.Authorization=`Bearer ${this.config.apiKey}`),t}updateConfig(t){this.config={...this.config,...t}}getConfig(){return{...this.config}}}class n extends a.bk{constructor(t,e,r="localStorage"){super(),this.currentWallet=null,this.provider=null,this.wasmBridge=t,this.provider=e||null,this.storageType=r}async createWallet(t={}){try{const e=await this.wasmBridge.createWallet(t);if("memory"!==this.storageType&&!a.bu.storeWallet(e.name,{name:e.name,address:e.address,version:e.version,createdAt:e.createdAt,privateKey:e.privateKey,publicKey:e.publicKey},this.storageType))throw new Error("Failed to store wallet securely");this.currentWallet=e;const r={name:e.name,address:e.address,version:e.version,createdAt:e.createdAt};return this.emit("wallet:created",r),r}catch(t){const e={code:"WALLET_CREATE_FAILED",message:`Failed to create wallet: ${t instanceof Error?t.message:"Unknown error"}`};throw this.emit("error",e),new Error(e.message)}}async loadWallet(t){try{if("memory"===this.storageType)throw new Error("Cannot load wallet in memory mode");const e=a.bu.loadWallet(t,this.storageType);if(!e)throw new Error(`Wallet '${t}' not found`);if(!e.privateKey||!e.address)throw new Error("Invalid wallet data");this.currentWallet=e;const r={name:e.name,address:e.address,version:e.version,createdAt:e.createdAt};return this.emit("wallet:loaded",r),r}catch(t){const e={code:"WALLET_LOAD_FAILED",message:`Failed to load wallet: ${t instanceof Error?t.message:"Unknown error"}`};throw this.emit("error",e),new Error(e.message)}}getCurrentWallet(){return this.currentWallet?{name:this.currentWallet.name,address:this.currentWallet.address,version:this.currentWallet.version,createdAt:this.currentWallet.createdAt}:null}listWallets(){return"memory"===this.storageType?[]:a.bu.listWallets(this.storageType)}async deleteWallet(t){if("memory"===this.storageType)return!1;const e=a.bu.deleteWallet(t,this.storageType);return e&&this.currentWallet?.name===t&&(this.currentWallet=null),e}async getBalance(){if(!this.currentWallet)throw new Error("No wallet loaded");if(!this.provider)throw new Error("Provider not configured - cannot fetch balance");try{return await this.provider.getBalance(this.currentWallet.address)}catch(t){const e={code:"BALANCE_FETCH_FAILED",message:`Failed to get balance: ${t instanceof Error?t.message:"Unknown error"}`};throw this.emit("error",e),new Error(e.message)}}async getUTXOs(){if(!this.currentWallet)throw new Error("No wallet loaded");if(!this.provider)throw new Error("Provider not configured - cannot fetch UTXOs");try{return await this.provider.getUTXOs(this.currentWallet.address)}catch(t){const e={code:"UTXO_FETCH_FAILED",message:`Failed to get UTXOs: ${t instanceof Error?t.message:"Unknown error"}`};throw this.emit("error",e),new Error(e.message)}}async sendTransaction(t){if(!this.currentWallet)throw new Error("No wallet loaded");try{if(!a.AddressUtils.isValidAddress(t.to))throw new Error(`Invalid recipient address: ${t.to}`);let e=[];this.provider&&(e=await this.getUTXOs());const r=await this.wasmBridge.signTransaction(this.currentWallet.privateKey,t,e),s={txHash:r.txHash,signature:r.signature,rawTransaction:r.transaction,status:"signed",message:"Transaction signed successfully"};if(this.emit("transaction:signed",s),this.provider)try{const t=await this.provider.broadcastTransaction(r);s.status=t.status,s.message=t.message,"broadcast"===s.status&&this.emit("transaction:broadcast",s)}catch(t){s.status="failed",s.message=`Broadcast failed: ${t instanceof Error?t.message:"Unknown error"}`}return s}catch(t){const e={txHash:"",signature:"",rawTransaction:"",status:"failed",message:`Transaction failed: ${t instanceof Error?t.message:"Unknown error"}`},r={code:"TRANSACTION_FAILED",message:e.message||"Transaction failed"};return this.emit("error",r),e}}async validateAddress(t){return await this.wasmBridge.validateAddress(t)}setProvider(t){this.provider=t}clearProvider(){this.provider=null}canPerformNetworkOperations(){return null!==this.provider}lock(){this.currentWallet=null}isUnlocked(){return null!==this.currentWallet}}class i{constructor(t="./shadowy.wasm"){this.wasmUrl=t,this.wasmModule=null,this.isLoaded=!1,this.loadPromise=null}async load(){if(!this.isLoaded)return this.loadPromise||(this.loadPromise=this._loadWasm()),this.loadPromise}async _loadWasm(){try{if("undefined"==typeof window||!window.Go)throw new Error("Go WASM runtime not found. Please include wasm_exec.js");{const t=new window.Go,e=await WebAssembly.instantiateStreaming(fetch(this.wasmUrl),t.importObject);t.run(e.instance),await this._waitForWasmInit(),this.wasmModule={createWallet:window.createWallet,signTransaction:window.signTransaction,validateAddress:window.validateAddress,getAddressFromPrivateKey:window.getAddressFromPrivateKey},this.isLoaded=!0}}catch(t){throw this.isLoaded=!1,new Error(`Failed to load WASM: ${t instanceof Error?t.message:"Unknown error"}`)}}async _waitForWasmInit(){let t=0;return new Promise((e,r)=>{const s=()=>{window.createWallet?e():(t+=100,t>=5e3?r(new Error("WASM initialization timeout")):setTimeout(s,100))};s()})}async createWallet(t={}){if(await this.load(),!this.wasmModule)throw new Error("WASM not loaded");try{const e=t.seed||await a.V0.generateSeed(),r=await this.wasmModule.createWallet(e);return{name:t.name||`wallet_${Date.now()}`,address:r.address,version:1,createdAt:(new Date).toISOString(),privateKey:r.privateKey,publicKey:r.publicKey}}catch(t){throw new Error(`Failed to create wallet: ${t instanceof Error?t.message:"Unknown error"}`)}}async signTransaction(t,e,r){if(await this.load(),!this.wasmModule)throw new Error("WASM not loaded");try{const s=e.fee||.011;return await this.wasmModule.signTransaction(t,e.to,e.amount,s,r)}catch(t){throw new Error(`Failed to sign transaction: ${t instanceof Error?t.message:"Unknown error"}`)}}async validateAddress(t){if(await this.load(),!this.wasmModule)throw new Error("WASM not loaded");try{return this.wasmModule.validateAddress(t)}catch(e){console.warn("WASM address validation failed, falling back to local validation:",e);const{AddressUtils:s}=await Promise.resolve().then(r.bind(r,266));return s.isValidAddress(t)}}async getAddressFromPrivateKey(t){if(await this.load(),!this.wasmModule)throw new Error("WASM not loaded");try{return this.wasmModule.getAddressFromPrivateKey(t)}catch(t){throw new Error(`Failed to get address: ${t instanceof Error?t.message:"Unknown error"}`)}}isReady(){return this.isLoaded&&null!==this.wasmModule}}var l=r(574);class c extends a.bk{constructor(t={}){super(),this.provider=null,this.config={wasmUrl:"./shadowy.wasm",storage:"localStorage",network:"local",...t},this.wasmBridge=new i(this.config.wasmUrl),this.config.node&&(this.provider=new o(this.config.node)),this.wallet=new n(this.wasmBridge,this.provider||void 0,this.config.storage),this.wallet.on("wallet:created",t=>this.emit("wallet:created",t)),this.wallet.on("wallet:loaded",t=>this.emit("wallet:loaded",t)),this.wallet.on("transaction:signed",t=>this.emit("transaction:signed",t)),this.wallet.on("transaction:broadcast",t=>this.emit("transaction:broadcast",t)),this.wallet.on("transaction:confirmed",t=>this.emit("transaction:confirmed",t)),this.wallet.on("error",t=>this.emit("error",t))}async initialize(){try{await this.wasmBridge.load(),this.provider&&(await this.provider.testConnection()||console.warn("Provider connection failed - working in offline mode"))}catch(t){const e={code:"INIT_FAILED",message:`Failed to initialize ShadowyWeb3: ${t instanceof Error?t.message:"Unknown error"}`};throw this.emit("error",e),new Error(e.message)}}async createWallet(t={}){return await this.wallet.createWallet(t)}async loadWallet(t){return await this.wallet.loadWallet(t)}getCurrentWallet(){return this.wallet.getCurrentWallet()}listWallets(){return this.wallet.listWallets()}async deleteWallet(t){return await this.wallet.deleteWallet(t)}lockWallet(){this.wallet.lock()}isWalletUnlocked(){return this.wallet.isUnlocked()}async getBalance(){return await this.wallet.getBalance()}async getAddressBalance(t){if(!this.provider)throw new Error("Provider not configured - cannot fetch balance");return await this.provider.getBalance(t)}async getUTXOs(){return await this.wallet.getUTXOs()}async getAddressUTXOs(t){if(!this.provider)throw new Error("Provider not configured - cannot fetch UTXOs");return await this.provider.getUTXOs(t)}async sendTransaction(t){return await this.wallet.sendTransaction(t)}async validateAddress(t){return await this.wallet.validateAddress(t)}async getNodeInfo(){if(!this.provider)throw new Error("Provider not configured - cannot get node info");return await this.provider.getNodeInfo()}async testConnection(){return!!this.provider&&await this.provider.testConnection()}connectToNode(t){this.config.node=t,this.provider=new o(t),this.wallet.setProvider(this.provider)}disconnectFromNode(){this.provider=null,this.config.node=void 0,this.wallet.clearProvider()}isConnected(){return null!==this.provider}canPerformNetworkOperations(){return this.wallet.canPerformNetworkOperations()}getConfig(){return{...this.config}}updateConfig(t){this.config={...this.config,...t},t.node&&this.provider&&this.provider.updateConfig(t.node)}saveSettings(){const t={config:this.config,lastWallet:this.wallet.getCurrentWallet()?.name};return a.bu.storeSettings(t)}loadSettings(){return a.bu.loadSettings()}static createLocal(t=8080){return new c({node:{url:`http://localhost:${t}`},network:"local"})}static createOffline(){return new c({storage:"sessionStorage"})}}const d=c;return s})());